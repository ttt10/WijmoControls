<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>HTML5 and AngularJS Validation</title>

    <!-- Angular/Bootstrap -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js" type="text/javascript"></script>
    <link rel="stylesheet" type="text/css" href="https://netdna.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />

    <!-- Wijmo -->
    <script src="scripts/vendor/wijmo.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.input.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.angular.min.js" type="text/javascript"></script>
    <link href="styles/vendor/wijmo.min.css" rel="stylesheet" />

    <!-- app scripts/styles -->
    <script src="scripts/app.js" type="text/javascript"></script>
    <script src="scripts/controllers/appCtrl.js" type="text/javascript"></script>
    <link href="styles/app.css" rel="stylesheet" />
</head>

<body ng-app="app" ng-controller="appCtrl">
    <div class="container">

        <!-- https://docs.angularjs.org/guide/forms -->
        <h1>
            Validation</h1>
        <p>
            This sample shows how you can use the <b>wjValidationError</b> directive
            to validate fields using HTML5 native validation or AngularJS's form
            validation.</p>
        <p>
            The <b>wjValidationError</b> directive contains an expression that returns
            an error string. If the string is empty, the element is considered valid.
            If the string is not empty, the field is considered invalid and the string
            is used as an error message.</p>
        <p>
            For example, the forms below have a "check password" field that is defined
            as follows:</p>
        <pre>&lt;input type="password"
    placeholder="Password" 
    name="pwd" ng-model="thePwd" 
    required pattern=".{2,}" title="Please enter 2 characters or more." /&gt;
&lt;input type="password"
    placeholder="Check Password"
    name="chk" ng-model="chkPwd"
    wj-validation-error="chkPwd != thePwd ? 'Passwords don\'t match' : ''" /&gt;</pre>

        <p>
            The forms also include Wijmo <b>InputDate</b> and <b>InputField</b> controls.
            Both of these controls have min and max properties that take care of simple
            validation and actually prevent the user from entering invalid data. In this
            sample, we did not use those properties to demonstrate that Wijmo input
            controls can be validated just like native input elements.</p>
        <p>
            Check what happens when you start entering data on either form.</p>
        <p>
            The form on the left shows validation errors as a red border. Some browsers
            add a tooltip to invalid input elements. If you press "Create Account" while
            any of the fields is in an invalid state, the browser will show an error 
            message on the first invalid field.</p>
        <p>
            The form on the right shows validation errors when you modify a field and
            move the focus to the next element. It may show several errors at once.
            The "Create Account" button is disabled until there are no errors.</p>
        <p>
            Note that although HTML5 specifies several validation attributes, not all
            browsers support them all. For example, IE11 does not support the HTML5
            'minlength' attribute, but Chrome does. In this sample, we used the
            'pattern' attribute to work around this limitation.We could also have 
            used the 'wj-validation-error' or 'ng-minlength' directives.</p>
        <div class="row">

            <!-- HTML5 + wjValidationError -->
            <div class="col-md-6">
                <form class="htmlform" ng-submit="submit()">
                    <h3>HTML5 + wjValidationError</h3>
                    <input 
                        class="form-control"
                        placeholder="User Name" 
                        name="name"
                        ng-model="theName" 
                        required pattern=".{2,}" title="Please enter 2 characters or more." />
                    <input 
                        class="form-control"
                        placeholder="E-mail" 
                        name="email"
                        ng-model="theEmail" 
                        required type="email"/>
                    <input 
                        class="form-control"
                        placeholder="Password" 
                        name="pwd"
                        ng-model="thePwd" 
                        type="password" 
                        required pattern=".{4,}" title="Please enter 4 characters or more." />
                    <input 
                        class="form-control"
                        placeholder="Check Password"
                        name="chk"
                        type="password"
                        ng-model="chkPwd"
                        wj-validation-error="chkPwd != thePwd ? 'Passwords don\'t match' : ''" />
                    <wj-input-date
                        placeholder="Some Date"
                        name="date"
                        ng-model="theDate"
                        wj-validation-error="theDate &lt;= today ? 'Please select a date after today.' : ''"></wj-input-date>
                    <wj-input-time
                        placeholder="Some Time"
                        name="time"
                        ng-model="theTime"
                        min="0:00" max="23:59"
                        wj-validation-error="theTime.getHours() &lt; 9 ? 'Please select a time after 9am.' : ''"></wj-input-time>
                    <button 
                        class="btn btn-primary"
                        type="submit">
                        Create Account
                    </button>
                </form>
            </div>

            <!-- AngularJS Form Validation -->
            <div class="col-md-6">
                <form name="ngForm" class="angularform" ng-submit="submit()" novalidate>
                    <h3>AngularJS Form Validation</h3>
                    <input 
                        class="form-control"
                        placeholder="User Name" 
                        name="name"
                        ng-model="theName" 
                        ng-model-options="{ updateOn: 'blur' }"
                        required pattern=".{2,}" title="Please enter 2 characters or more." />
                    <div 
                        class="error-message"
                        ng-show="ngForm.name.$invalid && !ngForm.name.$pristine">
                        We need a name with 2 characters or more.
                    </div>
                    <input 
                        class="form-control"
                        placeholder="E-mail" 
                        name="email"
                        ng-model="theEmail" 
                        ng-model-options="{ updateOn: 'blur' }"
                        required type="email"/>
                    <div 
                        class="error-message"
                        ng-show="ngForm.email.$invalid && !ngForm.email.$pristine">
                        We need a valid e-mail address.
                    </div>
                    <input 
                        class="form-control"
                        placeholder="Password" 
                        name="pwd"
                        type="password" 
                        ng-model="thePwd" 
                        ng-model-options="{ updateOn: 'blur' }"
                        required pattern=".{4,}" title="Please enter 4 characters or more." />
                    <div 
                        class="error-message"
                        ng-show="ngForm.pwd.$invalid && !ngForm.pwd.$pristine">
                        Passwords must have at least 4 characters.
                    </div>
                    <input 
                        class="form-control"
                        placeholder="Check Password"
                        name="chk"
                        type="password"
                        ng-model="chkPwd"
                        wj-validation-error="chkPwd != thePwd" />
                    <div 
                        class="error-message"
                        ng-show="ngForm.chk.$invalid && !ngForm.chk.$pristine">
                        Sorry, the passwords don't match.
                    </div>
                    <wj-input-date
                        placeholder="Some Date"
                        name="date"
                        ng-model="theDate"
                        wj-validation-error="theDate &lt;= today"></wj-input-date>
                    <div 
                        class="error-message"
                        ng-show="ngForm.date.$invalid && !ngForm.date.$pristine">
                        Please select a date after today.
                    </div>
                    <wj-input-time
                        placeholder="Some Time"
                        name="time"
                        ng-model="theTime"
                        min="0:00" max="23:59"
                        wj-validation-error="theTime.getHours() &lt; 9"></wj-input-time>
                    <div 
                        class="error-message"
                        ng-show="ngForm.time.$invalid && !ngForm.time.$pristine">
                        Please select a time after 9 am...
                    </div>
                    <button 
                        class="btn btn-primary"
                        type="submit"
                        ng-disabled="ngForm.$invalid">
                        Create Account
                    </button>
                </form>
            </div>
        </div>
    </div>
</body>
</html>
