<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>ngModel</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Third Party -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" />

    <!-- Wijmo -->
    <script src="scripts/vendor/wijmo.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.input.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.angular.min.js" type="text/javascript"></script>
    <link href="styles/vendor/wijmo.min.css" rel="stylesheet" />

    <!-- app scripts and styles -->
    <script src="scripts/app.js"></script>
    <script src="scripts/controllers/appCtrl.js"></script>
    <script src="scripts/directives/appDctv.js"></script>
    <link rel="stylesheet" href="styles/app.css" />
</head>
<body ng-app="app" ng-controller="appCtrl">

    <div class="header">
        <div class="container">
            <img src="resources/wijmo5.png" alt="Wijmo 5" />
            <h1>
                ngModel
            </h1>
            <p>
                This page shows how to bind Wijmo controls using the ngModel
                directive.
            </p>
        </div>
    </div>

    <div class="container">

        <!-- Getting Started -->
        <div>
            <h2 id="Start">Getting Started</h2>
            <p>
                In addition to the usual way of binding attributes to scope values,
                Wijmo's Angular directives support binding via the
                <b>ng-model</b> directive. The ng-model Angular directive
                augments Wijmo directives with its functionalities like validation,
                adding the control’s state to the form instance, automatic styling
                of the control using state CSS classes (like ng-dirty and ng-invalid) of
                ng-model, debouncing and so on. When an ng-model is used on a Wijmo
                control directive, it establishes a binding for the <i>"main value"</i>
                property of the control. This <i>"main value"</i> property varies from
                control to control, for example, the <b>value</b> property for
                InputNumber or InputDate controls and the <b>selectedValue</b> property
                for ComboBox or ListBox controls. In order to bind to a different
                property using the ng-model directive, you can specify the desired
                property name in the <b>wj-model-property</b> attribute on the directive
                element. For example, you can bind "text" property of InputNumber by
                setting <b>wj-model-property="text"</b> or "selectedIndex" property of
                combobox by setting <b>wj-model-property="selectedIndex"</b>.
            </p>
            <p>
                This example shows a form with native <b>input [type=number]</b> control
                and multiple Wijmo <b>InputNumber</b> and <b>ComboBox</b> controls. Each
                of them is bound to a scope using the <b>ng-model</b> directive. Each of
                the controls defines the <b>name</b> attribute that forces ng-model to
                publish the control state in the form instance.
            </p>
            <p>
                This example implements the <b>even-number</b> validator directive that
                reports errors for odd values. The validator is applied to all input
                controls including the native <b>input</b> control and Wijmo InputNumber
                controls. There is a <b>span</b> element next to each control that checks
                for the <b>even-number</b> error key in the control’s state published in
                the form instance and shows an error message if the key is found there.
            </p>
            <p>
                This example also defines CSS rules for the ng-model state classes:
                <b>ng-pristine</b> (darker background), <b>ng-valid</b> (green border) and
                <b>ng-invalid</b> (red border). Notice that these rules automatically
                get applied to native input as well as to Wijmo InputNumber controls
                depending on their states.
            </p>
            <p>
                The last InputNumber control has
                <b>ng-model-options="{ debounce: 1000 }"</b>, and you may observe that a
                bound scope property is updated with a one second delay after value in
                the control has changed.
            </p>
            <p>
                Apart from the InputNumber controls, the form contains two
                <b>ComboBox</b> controls as well, which are bound using ng-model
                to different control properties. The first one is bound to the
                <b>selectedValue</b> property(default behavior), and the second
                one is bound to the <b>selectedIndex</b> property by using the
                <b>wj-model-property</b> attribute on the control’s directive element.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
                                &lt;form name="form1" class="form"&gt;
                                &lt;div class="form-group"&gt;
                                &lt;label&gt;Input[type=number]&lt;/label&gt;&lt;br /&gt;
                                &lt;input type="number"
                                name="input1"
                                ng-model="num"
                                even-number /&gt;
                                &lt;span style="color:red"
                                ng-show="form1.input1.$error.evenNumber"&gt;
                                even number required
                                &lt;/span&gt;
                                &lt;br /&gt;
                                Scope value: &lt;b&gt;{&#8203;{num}}&lt;/b&gt;
                                &lt;/div&gt;

                                &lt;div class="form-group"&gt;
                                &lt;label&gt;InputNumber&lt;/label&gt;&lt;br /&gt;
                                &lt;wj-input-number name="inputNumber1"
                                ng-model="num1"
                                step="1"
                                format="n0"
                                even-number&gt;
                                &lt;/wj-input-number&gt;
                                &lt;span style="color:red"
                                ng-show="form1.inputNumber1.$error.evenNumber"&gt;
                                even number required
                                &lt;/span&gt;
                                &lt;br /&gt;
                                Scope value: &lt;b&gt;{&#8203;{num1}}&lt;/b&gt;
                                &lt;/div&gt;

                                &lt;div class="form-group"&gt;
                                &lt;label&gt;InputNumber (debounce: 1000)&lt;/label&gt;&lt;br /&gt;
                                &lt;wj-input-number name="inputNumber2"
                                ng-model="num2"
                                ng-model-options="{ debounce: 1000 }"
                                step="1"
                                format="n0"
                                even-number&gt;
                                &lt;/wj-input-number&gt;
                                &lt;span style="color:red"
                                ng-show="form1.inputNumber2.$error.evenNumber"&gt;
                                even number required
                                &lt;/span&gt;
                                &lt;br /&gt;
                                Scope value: &lt;b&gt;{&#8203;{num2}}&lt;/b&gt;
                                &lt;/div&gt;

                                &lt;div class="form-group"&gt;
                                &lt;label&gt;ComboBox&lt;/label&gt;&lt;br /&gt;
                                &lt;wj-combo-box name="valueCombo"
                                ng-model="valueComboValue"
                                items-source="data"
                                display-member-path="name"
                                selected-value-path="name"&gt;
                                &lt;/wj-combo-box&gt;
                                &lt;br /&gt;
                                Scope value: &lt;b&gt;{&#8203;{valueComboValue}}&lt;/b&gt;
                                &lt;/div&gt;

                                &lt;div class="form-group"&gt;
                                &lt;label&gt;ComboBox (wj-model-property="selectedIndex")&lt;/label&gt;&lt;br /&gt;
                                &lt;wj-combo-box name="indexCombo"
                                ng-model="indexComboValue"
                                wj-model-property="selectedIndex"
                                items-source="data"
                                display-member-path="name"
                                selected-value-path="name"&gt;
                                &lt;/wj-combo-box&gt;
                                &lt;br /&gt;
                                Scope value: &lt;b&gt;{&#8203;{indexComboValue}}&lt;/b&gt;
                                &lt;/div&gt;
                                &lt;button ng-click="form1.$setPristine()"&gt;
                                Make pristine
                                &lt;/button&gt;
                                &lt;/form&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="JS">
                            <div class="pane-content">
                                var app = angular.module('app');

                                // even-number validator directive
                                app.directive('evenNumber', function () {
                                return {
                                require: 'ngModel',
                                link: function (scope, elm, attrs, ctrl) {
                                ctrl.$parsers.push(function (viewValue) {
                                ctrl.$setValidity('evenNumber',
                                !viewValue || viewValue % 2 === 0);
                                return viewValue;
                                });
                                }
                                };
                                });

                                app.controller('appCtrl', function appCtrl($scope) {
                                $scope.num = 2;
                                $scope.num1 = 10;
                                $scope.num2 = 20;

                                $scope.data = [
                                { name: 'Apple Inc', lastPrice: 98.38 },
                                { name: 'Amazon.com, Inc.', lastPrice: 320.00 },
                                { name: 'Google Inc.', lastPrice: 585.81 },
                                { name: 'Yahoo Inc.', lastPrice: 35.68 },
                                ];

                                $scope.valueComboValue = 'Apple Inc';
                                $scope.indexComboValue = 0;
                                });
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="CSS">
                            <div class="pane-content">
                                /* ng-model state classes */
                                form input.ng-pristine,
                                form .ng-pristine.wj-control {
                                background-color: #f4f4f4;
                                }
                                .ng-valid {
                                border-color: lightgreen;
                                }
                                .ng-invalid {
                                border-color: red;
                                }
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <form name="form1" class="form">
                        <div class="form-group">
                            <label>Input[type=number]</label><br />
                            <input type="number"
                                   name="input1"
                                   ng-model="num"
                                   even-number />
                            <span style="color:red"
                                  ng-show="form1.input1.$error.evenNumber">
                                even number required
                            </span>
                            <br />
                            Scope value: <b>{{num}}</b>
                        </div>

                        <div class="form-group">
                            <label>InputNumber</label><br />
                            <wj-input-number name="inputNumber1"
                                             ng-model="num1"
                                             step="1"
                                             format="n0"
                                             even-number>
                            </wj-input-number>
                            <span style="color:red"
                                  ng-show="form1.inputNumber1.$error.evenNumber">
                                even number required
                            </span>
                            <br />
                            Scope value: <b>{{num1}}</b>
                        </div>

                        <div class="form-group">
                            <label>InputNumber (debounce: 1000)</label><br />
                            <wj-input-number name="inputNumber2"
                                             ng-model="num2"
                                             ng-model-options="{ debounce: 1000 }"
                                             step="1"
                                             format="n0"
                                             even-number>
                            </wj-input-number>
                            <span style="color:red"
                                  ng-show="form1.inputNumber2.$error.evenNumber">
                                even number required
                            </span>
                            <br />
                            Scope value: <b>{{num2}}</b>
                        </div>

                        <div class="form-group">
                            <label>ComboBox</label><br />
                            <wj-combo-box name="valueCombo"
                                          ng-model="valueComboValue"
                                          items-source="data"
                                          display-member-path="name"
                                          selected-value-path="name">
                            </wj-combo-box>
                            <br />
                            Scope value: <b>{{valueComboValue}}</b>
                        </div>

                        <div class="form-group">
                            <label>ComboBox (wj-model-property="selectedIndex")</label><br />
                            <wj-combo-box name="indexCombo"
                                          ng-model="indexComboValue"
                                          wj-model-property="selectedIndex"
                                          items-source="data"
                                          display-member-path="name"
                                          selected-value-path="name">
                            </wj-combo-box>
                            <br />
                            Scope value: <b>{{indexComboValue}}</b>
                        </div>
                        <button ng-click="form1.$setPristine()">
                            Make pristine
                        </button>
                    </form>
                </div>
            </div>
        </div>

    </div>

    <!-- Google analytics -->
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-208280-14', 'auto');
        ga('send', 'pageview');
    </script>
</body>
</html>