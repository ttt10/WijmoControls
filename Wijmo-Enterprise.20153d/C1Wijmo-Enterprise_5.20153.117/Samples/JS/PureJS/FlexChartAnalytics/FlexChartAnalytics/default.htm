<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <title>FlexChart Analytics</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- styles -->
    <link rel="stylesheet" type="text/css" href="https://netdna.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="styles/vendor/wijmo.min.css" />
    <link href="styles/app.css" rel="stylesheet" type="text/css" />

    <!-- jQuery/Bootstrap -->
    <script src="http://code.jquery.com/jquery-2.0.0.min.js" type="text/javascript"></script>
    <script src="https://netdna.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js" type="text/javascript"></script>

    <!-- Wijmo -->
    <script src="scripts/vendor/wijmo.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.input.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.chart.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.chart.analytics.min.js" type="text/javascript"></script>
</head>
<body>
    <div class="header">
        <div class="container">
            <img src="resources/wijmo5.png" />
            <h1>FlexChart Analytics</h1>
            <p>
                This page shows how to use function series and trend lines in Wijmo's FlexChart control.
                These features are included in wijmo.chart.analytics module.
            </p>
        </div>
    </div>
    <div class="container">
        <!-- getting start -->
        <div>
            <h2>
                Getting Started
            </h2>
            <p>
                Steps for getting started with the FlexChart Analytics in JavaScript applications:
            </p>
            <ol>
                <li>Add references to Wijmo.</li>
                <li>Add markup to serve as the FlexChart's host.</li>
                <li>Initialize the FlexChart via JavaScript and its itemSource property.</li>
                <li>Create one or more data series, and add each to the FlexChart's series collection (Optional).</li>
                <li>Create one or more trend line or function series, and add each to the FlexChart's series collection.</li>
                <li>Add some CSS to customize the chart's appearance (Optional).</li>
            </ol>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#gsHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#gsJs" role="tab" data-toggle="tab">JS</a></li>
                            <li><a href="#gsCss" role="tab" data-toggle="tab">CSS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane pane-content active" id="gsHtml">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;link rel="stylesheet" type="text/css" href="css/bootstrap.css"/&gt;
&lt;link rel="stylesheet" type="text/css" href="css/wijmo.css" /&gt;
&lt;link href="css/app.css" rel="stylesheet" type="text/css" /&gt;
&lt;script src="scripts/wijmo.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="scripts/wijmo.input.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="scripts/wijmo.chart.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="scripts/wijmo.chart.analytics.js" type="text/javascript"&gt;
&lt;/script&gt;
&lt;script src="scripts/app.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;!-- this is the FlexChart --&gt;
    &lt;div id="gettingStartChart"&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
                            </div>
                            <div class="tab-pane pane-content" id="gsJs">
// create FlexChart
var gettingStartedChart = new wijmo.chart.FlexChart('#gettingStartedChart');

// initialize FlexChart's properties
gettingStartedChart.initialize({
    itemsSource: appData,
    bindingX: 'x',
    series: [{ 
        name: 'Origin', 
        binding: 'y', 
        chartType: wijmo.chart.ChartType.Scatter 
    }]
});

//create TrendLine
var trendLine = new wijmo.chart.analytics.TrendLine();
trendLine.name = 'Trend Line';
trendLine.binding = 'y';
trendLine.sampleCount = 100;
gettingStartedChart.series.push(trendLine);

                            </div>
                            <div class="tab-pane pane-content" id="gsCss">
.wj-flexchart {
    background-color: white;
    box-shadow: 4px 4px 10px 0px rgba(50, 50, 50, 0.75);
    height: 400px;
    margin-bottom: 12px;
    padding: 8px;
}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="gettingStartedChart"></div>
                </div>
            </div>
        </div>

        <!-- TrendLine -->
        <div>
            <h2>TrendLine</h2>
            <p>You can use different trendline types by setting the <b>fitType</b>
            property of TrendLine. </p>
            <p>The example below allows you to see what happens when you change this property:</p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#tlHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#tlJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane pane-content active" id="tlHtml">
&lt;div id="trendLineChart"&gt;&lt;/div&gt;
&lt;select id="fitTypeMenu"&gt;
    &lt;option value="0" selected="selected"&gt;Linear&lt;/option&gt;
    &lt;option value="1"&gt;Exponential&lt;/option&gt;
    &lt;option value="2"&gt;Logarithmic&lt;/option&gt;
    &lt;option value="3"&gt;Power&lt;/option&gt;
    &lt;option value="4"&gt;Fourier&lt;/option&gt;
    &lt;option value="5"&gt;Polynomial&lt;/option&gt;
    &lt;option value="6"&gt;MinX&lt;/option&gt;
    &lt;option value="7"&gt;MinY&lt;/option&gt;
    &lt;option value="8"&gt;MaxX&lt;/option&gt;
    &lt;option value="9"&gt;MaxY&lt;/option&gt;
    &lt;option value="10"&gt;AverageX&lt;/option&gt;
    &lt;option value="11"&gt;AverageY&lt;/option&gt;
&lt;/select&gt;
                            </div>
                            <div class="tab-pane pane-content" id="tlJs">
                                
// create FlexChart and Menus
var trendLineChart = new wijmo.chart.FlexChart('#trendLineChart'),
    fitTypeMenu = new wijmo.input.Menu('#fitTypeMenu'),
    trendLine;

// initialize FlexChart's properties
trendLineChart.initialize({
    itemsSource: appData,
    bindingX: 'x',
    series: [{ 
        name: 'Origin', 
        binding: 'y', 
        chartType: wijmo.chart.ChartType.Scatter 
    }]
});

//create TrendLine
trendLine = new wijmo.chart.analytics.TrendLine();
trendLine.name = 'Trend Line';
trendLine.binding = 'y';
trendLine.sampleCount = 100;
trendLineChart.series.push(trendLine);

// update the menus' headers
updateMenuHeader();

fitTypeMenu.selectedIndexChanged.addHandler(function () {
    if (fitTypeMenu.selectedValue) {
        // update TrendLine's fitType
        trendLine.fitType = parseInt(fitTypeMenu.selectedValue);

        // update menu header
        updateMenuHeader();
    }
});

// helper function for Menu headers
function updateMenuHeader() {
    fitTypeMenu.header = '&lt;b&gt;Fit Type&lt;/b&gt;: ' + fitTypeMenu.text;
}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="trendLineChart"></div>
                    <select id="fitTypeMenu">
                        <option value="0" selected="selected">Linear</option>
                        <option value="1">Exponential</option>
                        <option value="2">Logarithmic</option>
                        <option value="3">Power</option>
                        <option value="4">Fourier</option>
                        <option value="5">Polynomial</option>
                        <option value="6">MinX</option>
                        <option value="7">MinY</option>
                        <option value="8">MaxX</option>
                        <option value="9">MaxY</option>
                        <option value="10">AverageX</option>
                        <option value="11">AverageY</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- MovingAverage -->
        <div>
            <h2>MovingAverage</h2>
            <p>
                You can use different moving average types by setting the <b>type</b>
                property of MovingAverage.
            </p>
            <p>
                The MovingAverage class has a <b>period</b> property that allows you to set
                the number of periods for computing the average value.
            </p>
            <p>The example below allows you to see what happens when you change these properties:</p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#maHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#maJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane pane-content active" id="maHtml">
&lt;div id="movingAverageChart"&gt;&lt;/div&gt;
&lt;select id="typeMenu"&gt;
    &lt;option value="0" selected="selected"&gt;Simple&lt;/option&gt;
    &lt;option value="1"&gt;Weighted&lt;/option&gt;
    &lt;option value="2"&gt;Exponential&lt;/option&gt;
    &lt;option value="3"&gt;Triangular&lt;/option&gt;
&lt;/select&gt;
&lt;b&gt;Period:&lt;/b&gt; &lt;input id="periodInput" type="text" /&gt;
                            </div>
                            <div class="tab-pane pane-content" id="maJs">
// create FlexChart and Menus
var movingAverageChart = new wijmo.chart.FlexChart('#movingAverageChart'),
    typeMenu = new wijmo.input.Menu('#typeMenu'),
    periodInput = new wijmo.input.InputNumber('#periodInput'),
    movingAverage;

//set inputnumber
periodInput.value = 2;
periodInput.min = 2;
periodInput.max = 29;
periodInput.step = 1;
periodInput.format = "n0";

// initialize FlexChart's properties
movingAverageChart.initialize({
    itemsSource: getData(40),
    bindingX: 'x',
    series: [{
        name: 'Origin',
        binding: 'y',
        chartType: wijmo.chart.ChartType.Scatter
    }]
});

//create MovingAverage
movingAverage = new wijmo.chart.analytics.MovingAverage();
movingAverage.name = 'MA';
movingAverage.binding = 'y';
movingAverage.sampleCount = 100;
movingAverageChart.series.push(movingAverage);

// update the menus' headers
updateMenuHeader();

typeMenu.selectedIndexChanged.addHandler(function () {
    if (typeMenu.selectedValue) {
        // update MovingAverage's type
        movingAverage.type = parseInt(typeMenu.selectedValue);

        // update menu header
        updateMenuHeader();
    }
});

periodInput.valueChanged.addHandler(function () {
    // update MovingAverage's period
    movingAverage.period = periodInput.value;
});

// helper function for Menu headers
function updateMenuHeader() {
    typeMenu.header = '&lt;b&gt;Type&lt;/b&gt;: ' + typeMenu.text;
}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="movingAverageChart"></div>
                    <select id="typeMenu">
                        <option value="0" selected="selected">Simple</option>
                        <option value="1">Weighted</option>
                        <option value="2">Exponential</option>
                        <option value="3">Triangular</option>
                    </select>
                    <b>Period:</b> <input id="periodInput" type="text" />
                </div>
            </div>
        </div>

        <!-- YFunctionSeries -->
        <div>
            <h2>YFunctionSeries</h2>
            <p>
                This view shows Y Function Series in FlexChart.
                The YFunctionSeries allows to plot a function that is defined with formula y=y(x). Use the <b>func</b> property to specify the function.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#yfsHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#yfsJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane pane-content active" id="yfsHtml">
&lt;div id="yFuncSeriesChart"&gt;&lt;/div&gt;
                            </div>
                            <div class="tab-pane pane-content" id="yfsJs">
// create yFuncSeriesChart
var yFuncSeriesChart = new wijmo.chart.FlexChart('#yFuncSeriesChart');

//create YFunctionSeries
var yFuncSeries = new wijmo.chart.analytics.YFunctionSeries();
yFuncSeries.name = 'YFuncSeries';
yFuncSeries.min = -10;
yFuncSeries.max = 10;
yFuncSeries.sampleCount = 300;
yFuncSeries.func = function (value) {
    return Math.sin(4 * value) * Math.cos(3 * value);
};
yFuncSeriesChart.series.push(yFuncSeries);
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="yFuncSeriesChart"></div>
                </div>
            </div>
        </div>

        <!-- ParametricFunctionSeries -->
        <div>
            <h2>ParametricFunctionSeries</h2>
            <p>
                The ParametricFunctionSeries allows to plot a function that is defined parametrically
            with formulas x = x(t) and y = y(t). Use the <b>xFunc</b> and <b>yFunc</b> properties
            to specify the functions for x and y coordinates.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="active"><a href="#pfsHtml" role="tab" data-toggle="tab">HTML</a></li>
                            <li><a href="#pfsJs" role="tab" data-toggle="tab">JS</a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane pane-content active" id="pfsHtml">
&lt;div id="paramFuncSeriesChart"&gt;&lt;/div&gt;
                            </div>
                            <div class="tab-pane pane-content" id="pfsJs">
//create paramFuncSeriesChart
var paramFuncSeriesChart = new wijmo.chart.FlexChart('#paramFuncSeriesChart'),
    xParam = 5,
    yParam = 7;

//create ParametricFunctionSeries
var paramFuncSeries = new wijmo.chart.analytics.ParametricFunctionSeries();
paramFuncSeries.name = 'ParamFunc';
paramFuncSeries.max = 2 * Math.PI;
paramFuncSeries.sampleCount = 1000;
paramFuncSeries.xFunc = function (value) {
    return Math.cos(value * xParam);
};
paramFuncSeries.yFunc = function (value) {
    return Math.sin(value * yParam);
};
paramFuncSeriesChart.series.push(paramFuncSeries);
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div id="paramFuncSeriesChart"></div>
                </div>
            </div>
        </div>
    </div>

    <script src="scripts/app.js" type="text/javascript"></script>
    <script src="scripts/gettingstart.js" type="text/javascript"></script>
    <script src="scripts/trendline.js" type="text/javascript"></script>
    <script src="scripts/movingaverage.js" type="text/javascript"></script>
    <script src="scripts/functionseries.js" type="text/javascript"></script>

    <!-- Google analytics -->
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-208280-14', 'auto');
        ga('send', 'pageview');
    </script>
</body>
</html>
